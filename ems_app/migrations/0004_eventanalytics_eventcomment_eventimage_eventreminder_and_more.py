# Generated by Django 5.1.1 on 2025-06-03 15:02

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ems_app', '0003_event_organizer_event_registration_deadline_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('total_registrations', models.PositiveIntegerField(default=0)),
                ('confirmed_registrations', models.PositiveIntegerField(default=0)),
                ('cancelled_registrations', models.PositiveIntegerField(default=0)),
                ('waitlist_registrations', models.PositiveIntegerField(default=0)),
                ('total_shares', models.PositiveIntegerField(default=0)),
                ('total_comments', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('checked_in_count', models.PositiveIntegerField(default=0)),
                ('attendance_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='event_gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-is_featured', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='EventReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('registration_deadline', 'Registration Deadline'), ('event_start', 'Event Start'), ('event_end', 'Event End'), ('feedback_request', 'Feedback Request')], max_length=25)),
                ('send_time', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('recipients_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['send_time'],
            },
        ),
        migrations.CreateModel(
            name='EventShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('linkedin', 'LinkedIn'), ('whatsapp', 'WhatsApp'), ('email', 'Email'), ('copy_link', 'Copy Link')], max_length=20)),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_hours', models.PositiveIntegerField(default=2)),
                ('max_participants', models.PositiveIntegerField(default=50)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventWaitlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('position', models.PositiveIntegerField()),
                ('notified', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='eventcategory',
            options={'ordering': ['name'], 'verbose_name_plural': 'Event Categories'},
        ),
        migrations.AlterModelOptions(
            name='eventfeedback',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='eventregistration',
            options={'ordering': ['-registration_date']},
        ),
        migrations.RenameField(
            model_name='eventregistration',
            old_name='attended',
            new_name='checked_in',
        ),
        migrations.RemoveField(
            model_name='event',
            name='image',
        ),
        migrations.AddField(
            model_name='event',
            name='agenda',
            field=models.TextField(blank=True, help_text='Event schedule/agenda'),
        ),
        migrations.AddField(
            model_name='event',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='banner_image',
            field=models.ImageField(blank=True, null=True, upload_to='event_banners/'),
        ),
        migrations.AddField(
            model_name='event',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='event',
            name='contact_phone',
            field=models.CharField(blank=True, max_length=15),
        ),
        migrations.AddField(
            model_name='event',
            name='featured_image',
            field=models.ImageField(blank=True, null=True, upload_to='event_images/'),
        ),
        migrations.AddField(
            model_name='event',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='is_free',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='event',
            name='is_recurring',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='event',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160),
        ),
        migrations.AddField(
            model_name='event',
            name='meta_keywords',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='event',
            name='min_participants',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='event',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10),
        ),
        migrations.AddField(
            model_name='event',
            name='registration_fee',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='event',
            name='requirements',
            field=models.TextField(blank=True, help_text='What participants need to bring/know'),
        ),
        migrations.AddField(
            model_name='event',
            name='share_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='event',
            name='short_description',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AddField(
            model_name='event',
            name='slug',
            field=models.SlugField(blank=True, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='event',
            name='venue_details',
            field=models.TextField(blank=True, help_text='Additional venue information'),
        ),
        migrations.AddField(
            model_name='event',
            name='view_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='eventcategory',
            name='color',
            field=models.CharField(default='#007bff', help_text='Hex color code', max_length=7),
        ),
        migrations.AddField(
            model_name='eventcategory',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='eventcategory',
            name='icon',
            field=models.CharField(default='fas fa-calendar', help_text='FontAwesome icon class', max_length=50),
        ),
        migrations.AddField(
            model_name='eventcategory',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='content_rating',
            field=models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='helpful_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='is_anonymous',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='is_approved',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='organization_rating',
            field=models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='venue_rating',
            field=models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='check_in_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='checked_in_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_in_participants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='dietary_requirements',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='email_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='emergency_contact',
            field=models.CharField(blank=True, max_length=15),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='reminder_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('waitlist', 'Waitlist')], default='confirmed', max_length=10),
        ),
        migrations.AlterField(
            model_name='event',
            name='end_date',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='event',
            name='registration_deadline',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='event',
            name='start_date',
            field=models.DateTimeField(),
        ),
        migrations.AlterField(
            model_name='event',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='draft', max_length=10),
        ),
        migrations.AlterField(
            model_name='eventcategory',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='eventfeedback',
            name='rating',
            field=models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['status', 'start_date'], name='ems_app_eve_status_f89a12_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['category', 'start_date'], name='ems_app_eve_categor_4dbbf1_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['organizer', '-created_at'], name='ems_app_eve_organiz_39fda6_idx'),
        ),
        migrations.AddField(
            model_name='eventanalytics',
            name='event',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='ems_app.event'),
        ),
        migrations.AddField(
            model_name='eventcomment',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='ems_app.event'),
        ),
        migrations.AddField(
            model_name='eventcomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='ems_app.eventcomment'),
        ),
        migrations.AddField(
            model_name='eventcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventimage',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ems_app.event'),
        ),
        migrations.AddField(
            model_name='eventreminder',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='ems_app.event'),
        ),
        migrations.AddField(
            model_name='eventshare',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='ems_app.event'),
        ),
        migrations.AddField(
            model_name='eventshare',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventtemplate',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ems_app.eventcategory'),
        ),
        migrations.AddField(
            model_name='eventtemplate',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventwaitlist',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist', to='ems_app.event'),
        ),
        migrations.AddField(
            model_name='eventwaitlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='eventwaitlist',
            unique_together={('event', 'user')},
        ),
    ]
